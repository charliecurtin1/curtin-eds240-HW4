---
title: "Homework Assignment #3"
author: "Charlie Curtin"
date: 2024-02-23
toc: true
format:
  html:
    embed-resources: true
editor_options: 
  chunk_output_type: console
---


```{r, message = FALSE}
# load packages
library(tidyverse)
library(here)
library(showtext)
library(scales)

# turn off scientific notation
options(scipen = 999)

# get fonts from google for plots
font_add_google(name = "League Spartan", family = "league")

# enable showtext for rendering
showtext_auto()
```


## Visualizations

```{r, message = FALSE, warning = FALSE}
# read in california fires
ca_fires <- read_csv(here("data", "ca_fires.csv"))
```

- make sure in the final to actually put the subsetting and stuff that got you to the final dataset, not just from california fires

```{r}
## cleaning and wrangling
ca_fires_clean <- ca_fires %>% 
  # convert names to lower snakecase
  janitor::clean_names() %>% 
  # select variables of interest
  select(nwcg_reporting_agency, nwcg_reporting_unit_name, fire_name, fire_year, discovery_date, discovery_doy, discovery_time, discovery_time, nwcg_cause_classification, nwcg_general_cause, cont_date, cont_doy, cont_time, fire_size, fire_size_class, fips_name) %>% 
  # create a new column to describe days it took to contain fire 
  mutate(days_active = as.numeric(difftime(cont_date, discovery_date, units = "days"))) %>% 
  # remove the minutes from each discovery and contained time to get just the hour
  mutate(disc_hour = str_sub(discovery_time, start = 1, end = -3),
         cont_hour = str_sub(cont_time, start = 1, end = -3))
           
## create new dataframes summarizing number of fires discovered and contained on each day of the year
disc_doy <- ca_fires_clean %>% 
  group_by(discovery_doy) %>% 
  summarize(count = n())

cont_doy <- ca_fires_clean %>% 
  group_by(cont_doy) %>% 
  summarize(count = n()) %>% 
  drop_na()

## create a new dataframe subsetting the largest fires
largest_fires <- ca_fires_clean %>% 
  slice_max(fire_size, n = 11) %>%
  # remove the Thomas Fire for lack of data
  filter(!fire_name %in% c("THOMAS")) %>% 
  # assign a number to each fire for plotting purposes
  mutate(fire_num = rank(desc(fire_size))) %>% 
  # turn fire names into title case and add "Fire" after
  mutate(fire_name = str_to_title(fire_name),
         fire_name = paste(fire_name, "Fire")) %>% 
  # add commas to fire size and create a new column that adds the acres label
  mutate(fire_size = format(fire_size, big.mark = ",", scientific = FALSE),
         acres_label = paste(fire_size, "acres")) %>% 
  # separat the month and day from the year
  mutate(disc_a = format(discovery_date, "%m-%d"),
         cont_a = format(cont_date, "%m-%d"))

# add dummy year to discovery and contained dates for plotting
largest_fires$disc_a <- mdy(paste0(largest_fires$disc_a, "-2000"))
largest_fires$cont_a <- mdy(paste0(largest_fires$cont_a, "-2000"))

# group fires by discovery and contained hour and get counts
disc_hour <- ca_fires_clean %>% 
  group_by(disc_hour) %>% 
  summarize(count = n()) %>% 
  drop_na()

cont_hour <- ca_fires_clean %>% 
  group_by(cont_hour) %>% 
  summarize(count = n()) %>% 
  drop_na()
```


## Plotting

```{r}
# barplot of count of fires discovered at each hour of the day
  ggplot() +
  # plot barplot with counts
  geom_bar(data = disc_hour,
           aes(x = disc_hour, y = count, fill = count),
           stat = "identity") +
  # color bars by gradient for fire aesthetic
  scale_fill_gradient(low = "orange", high = "red") +
  # modify y-axis limit to make data flush with x-axis
  scale_y_continuous(expand = c(0,0),
                     limits = c(0, 19000)) +
  # add labels, title, and subtitle
  labs(x = "hour of the day",
       y = "number of fires",
       title = "When are fires spotted?",
       subtitle = "Count of wildfires discovered at each hour of the day from 1992-2018") +
  # modify theme elements
  theme(panel.grid.major.x = element_blank(), # remove x-axis grid lines
        # set plot background to be black
        plot.background = element_rect(fill = "black", color = NA),
        # set panel background to be black
        panel.background = element_rect(fill = "black", color = NA),
        # set panel border to be white
        panel.border = element_rect(color = "white", fill = NA),
        # set axis labels to be white
        axis.title = element_text(color = "white",
                                  family = "league",
                                  size = 12),
        # set axis breaks to be white
        axis.text = element_text(color = "white",
                                 family = "league"),
        # modify title text
        plot.title = element_text(color = "white",
                                  family = "league",
                                  face = "bold",
                                  size = 15),
        # modify subtitle text
        plot.subtitle = element_text(color = "white",
                                     family = "league",
                                     size = 12),
        # set axis ticks to be white
        axis.ticks = element_line(color = "white"),
        # set axis lines to be white
        axis.line = element_line(color = "white"),
        # remove the legend
        legend.position = "none")
```


## working on modifying plot #1
```{r}
# barplot of count of fires discovered at each hour of the day
  ggplot() +
  # plot barplot with counts
  geom_bar(data = disc_hour,
           aes(x = disc_hour, y = count),
           stat = "identity", fill = "orange") +
  # modify y-axis limit to make data flush with x-axis
  scale_y_continuous(expand = c(0,0),
                     limits = c(0, 19000),
                     labels = label_comma()) +
  # add labels, title, and subtitle
  labs(x = "hour of the day",
       y = "number of fires",
       title = "Wildfires tend to be discovered in the early afternoon",
       subtitle = "Count of wildfires discovered at each hour of the day from 1992-2018") +
  # modify theme elements
  theme(panel.grid.major = element_blank(), # remove grid lines
        panel.grid.minor = element_blank(),
        # remove panel border
        panel.border = element_blank(),
        # set plot background to be black
        plot.background = element_rect(fill = "black", color = NA),
        # set panel background to be black
        panel.background = element_rect(fill = "black", color = NA),
        # set panel border to be white
        #panel.border = element_rect(color = "white", fill = NA),
        # set axis labels to be white
        axis.title = element_text(color = "white",
                                  family = "league",
                                  size = 12),
        # set axis breaks to be white
        axis.text = element_text(color = "white",
                                 family = "league"),
        # set axis titles to be distanced from the axis
        axis.title.x = element_text(margin = margin(.3, 0, 0, 0, "cm")),
        # set axis titles to be distanced
        axis.title.y = element_text(margin = margin(0, .3, 0, 0, "cm")),
        # modify title text
        plot.title = element_text(color = "white",
                                  family = "league",
                                  face = "bold",
                                  size = 15),
        # modify subtitle text
        plot.subtitle = element_text(color = "white",
                                     family = "league",
                                     size = 12),
        # set axis ticks to be white
        axis.ticks = element_line(color = "white"),
        # set axis lines to be white
        axis.line = element_line(color = "white"),
        # remove the legend
        legend.position = "none")
```


```{r}
# barplot of discovery day of the year
disc_doy %>% 
  ggplot() +
  # plot the counts dataframe with stat = "identity"
  geom_bar(aes(x = discovery_doy, y = count, fill = count),
           stat = "identity", color = "orange", linewidth = .05) +
  # set a gradient fill on the bars
  scale_fill_gradient(low = "orange", high = "red") +
  # make data flush with the x- and y-axes
  scale_x_continuous(expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0),
                     limits = c(0, 3200)) +
  # set x-axis and y-axis labels
  labs(x = "day of the year",
       y = "number of fires",
       title = "When is 'fire season'?",
       subtitle = "Count of wildfires discovered on each day of the year from 1992-2018") +
  # add annotations to label spikes in fire activity
  annotate(geom = "text", x = 180, y = 2850, size = 3, 
           label = "4th of July", color = "white", angle = 90,
           family = "league") +
  annotate(geom = "text", x = 240, y = 1800, size = 3, 
           label = "Labor Day", color = "white", angle = 90,
           family = "league") +
  annotate(geom = "text", x = 167, y = 1800, size = 3, 
           label = "Summer Solstice", color = "white", angle = 90,
           family = "league") +
    # modify theme elements
  theme(panel.grid.major = element_line(color = NA), # remove grid lines
        panel.grid.minor = element_line(color = NA),
        # set plot background to be black
        plot.background = element_rect(fill = "black", color = NA),
        # set panel background to be black
        panel.background = element_rect(fill = "black", color = NA),
        # set panel border to be white
        panel.border = element_rect(color = "white", fill = NA),
        # modify axis labels text
        axis.title = element_text(color = "white",
                                  family = "league",
                                  size = 12),
        # modify axis breaks text
        axis.text = element_text(color = "white",
                                 family = "league"),
        # set axis ticks to be white
        axis.ticks = element_line(color = "white"),
        # set axis lines to be white
        axis.line = element_line(color = "white"),
        # remove the legend
        legend.position = "none",
        # modify plot title text
        plot.title = element_text(color = "white",
                                  family = "league",
                                  size = 15,
                                  face = "bold"),
        # modify plot subtitle text
        plot.subtitle = element_text(color = "white",
                                     family = "league",
                                     size = 12))

# add space between axes 
```


## modifying discovery day of the year

```{r}
# barplot of discovery day of the year
disc_doy %>% 
  ggplot() +
  # plot the counts dataframe with stat = "identity"
  geom_bar(aes(x = discovery_doy, y = count), fill = "orange",
           stat = "identity", color = "orange") +
  # make data flush with the x- and y-axes
  scale_x_continuous(expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0),
                     limits = c(0, 3200),
                     label = label_comma()) +
  # set x-axis and y-axis labels
  labs(x = "day of the year",
       y = "number of fires",
       title = "Wildfire activity peaks during early summer",
       subtitle = "Count of wildfires discovered on each day of the year from 1992-2018") +
  # add annotations to label spikes in fire activity
  annotate(geom = "text", x = 155, y = 3050, size = 3, 
           label = "4th of July", color = "white",
           family = "league") +
    # modify theme elements
  theme(panel.grid.major = element_blank(), # remove grid lines
        panel.grid.minor = element_blank(),
        # remove panel border
        panel.border = element_blank(),
        # set plot background to be black
        plot.background = element_rect(fill = "black", color = NA),
        # set panel background to be black
        panel.background = element_rect(fill = "black", color = NA),
        # modify axis labels text
        axis.title = element_text(color = "white",
                                  family = "league",
                                  size = 12),
        # modify axis breaks text
        axis.text = element_text(color = "white",
                                 family = "league"),
        # set axis titles to be distanced from the axis
        axis.title.x = element_text(margin = margin(.3, 0, 0, 0, "cm")),
        # set axis titles to be distanced
        axis.title.y = element_text(margin = margin(0, .3, 0, 0, "cm")),
        # set axis ticks to be white
        axis.ticks = element_line(color = "white"),
        # set axis lines to be white
        axis.line = element_line(color = "white"),
        # remove the legend
        legend.position = "none",
        # modify plot title text
        plot.title = element_text(color = "white",
                                  family = "league",
                                  size = 15,
                                  face = "bold"),
        # modify plot subtitle text
        plot.subtitle = element_text(color = "white",
                                     family = "league",
                                     size = 12))
```




```{r}
# not even sure what type of plot this is
ggplot(data = largest_fires) +
  # plot each fire as a line segment, length-dependent on days active
  geom_segment(aes(x = disc_a, xend = cont_a, y = fire_num, 
                   yend = fire_num, color = days_active), linewidth = 5) +
  # color segments in a gradient fill based on fire size
  scale_color_gradient(low = "orange", high = "red") +
  # directly label each fire with fire name
  geom_text(aes(x = cont_a, y = fire_num, label = fire_name), 
            hjust = 1, vjust = -.7, size = 4, 
            color = "white", family = "league") +
  # directly label each fire with fire size
  geom_text(aes(x = cont_a, y = fire_num, label = acres_label), 
            hjust = 1, vjust = 1.5, size = 4, 
            nudge_x = 0.5, color = "white", family = "league") +
  # convert date format into month names
  scale_x_date(date_breaks = "1 month", 
               date_labels = "%b") +
  # this line was meant to give the bars some space but somehow orders them by fire size so I'm scared to touch it
  scale_y_discrete(limits = c(0, 11),
                   expand = c(-1,-1)) +
  # add axis labels, title, and subtitle
  labs(x = "fire duration",
       y = "",
       title = "How long does it take to contain a megafire?",
       subtitle = "10 of California's largest megafires, mapped by days active") +
  theme(panel.grid.major.x = element_blank(), # remove x-axis grid lines
        # remove panel grid lines
        panel.grid.major = element_line(color = NA),
        panel.grid.minor = element_line(color = NA),
        # set plot background to be black
        plot.background = element_rect(fill = "black", color = NA),
        # set panel background to be black
        panel.background = element_rect(fill = "black", color = NA),
        # set panel border to be white
        panel.border = element_rect(color = "white", fill = NA),
        # modify axis title text
        axis.title = element_text(color = "white",
                                  family = "league",
                                  size = 12),
        # modify axis breaks text
        axis.text = element_text(color = "white",
                                 family = "league"),
        # set axis ticks to be white
        axis.ticks = element_line(color = "white"),
        # remove y-axis ticks
        axis.ticks.y = element_blank(),
        # remove y-axis labels
        axis.text.y = element_blank(),
        # set axis lines to be white
        axis.line = element_line(color = "white"),
        # remove the legend
        legend.position = "none",
        # format plot title
        plot.title = element_text(color = "white",
                                  family = "league",
                                  size = 15,
                                  face = "bold"),
        # format plot subtitle
        plot.subtitle = element_text(color = "white",
                                     family = "league",
                                     size = 12))
```


## modifying the final plot
```{r}
# not even sure what type of plot this is
ggplot(data = largest_fires) +
  # plot each fire as a line segment, length-dependent on days active
  geom_segment(aes(x = disc_a, xend = cont_a, y = fire_num, 
                   yend = fire_num), 
               linewidth = 2, color = "orange") +
  # directly label each fire with fire name
  geom_text(aes(x = cont_a, y = fire_num, label = fire_name), 
            hjust = 1, vjust = -.7, size = 4, 
            color = "white", family = "league") +
  # directly label each fire with fire size
  geom_text(aes(x = cont_a, y = fire_num, label = acres_label), 
            hjust = 1, vjust = 1.5, size = 4, 
            nudge_x = 0.5, color = "white", family = "league") +
  # convert date format into month names
  scale_x_date(date_breaks = "1 month", 
               date_labels = "%b") +
  # this line was meant to give the bars some space but somehow orders them by fire size so I'm scared to touch it
  scale_y_discrete(limits = c(0, 11),
                   expand = c(-1,-1)) +
  # add axis labels, title, and subtitle
  labs(x = "fire duration",
       y = "",
       title = "Containing a megafire can take months ",
       subtitle = "10 of California's largest megafires by days active") +
  theme(panel.grid.major.x = element_blank(), # remove x-axis grid lines
        # remove panel grid lines
        panel.grid.major = element_line(color = NA),
        panel.grid.minor = element_line(color = NA),
        # remove panel border
        panel.border = element_blank(),
        # set plot background to be black
        plot.background = element_rect(fill = "black", color = NA),
        # set panel background to be black
        panel.background = element_rect(fill = "black", color = NA),
        # modify axis title text
        axis.title = element_text(color = "white",
                                  family = "league",
                                  size = 12),
        # move the x-axis label
        axis.title.x = element_text(margin = margin(.3, 0, 0, 0, "cm")),
        # modify axis breaks text
        axis.text = element_text(color = "white",
                                 family = "league"),
        # set axis ticks to be white
        axis.ticks = element_line(color = "white"),
        # remove y-axis ticks
        axis.ticks.y = element_blank(),
        # remove y-axis labels
        axis.text.y = element_blank(),
        # set axis lines to be white
        axis.line = element_line(color = "white"),
        # remove the legend
        legend.position = "none",
        # format plot title
        plot.title = element_text(color = "white",
                                  family = "league",
                                  size = 15,
                                  face = "bold"),
        # format plot subtitle
        plot.subtitle = element_text(color = "white",
                                     family = "league",
                                     size = 12))
```



- remember to put figure captions and alt-text on everything